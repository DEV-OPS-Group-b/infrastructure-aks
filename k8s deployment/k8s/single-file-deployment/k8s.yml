apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: go
      name: go
    spec:
      ports:
        - name: "9000"
          port: 9000
          targetPort: 9000
      selector:
        app: go
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: mongo
      name: mongo
    spec:
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        app: mongo
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: react
      name: react
    spec:
      ports:
        - name: "3000"
          port: 3000
          targetPort: 3000
      selector:
        app: react
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: spring
      name: spring
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        app: spring
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: go
      name: go
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: go
      strategy: {}
      template:
        metadata:
          labels:
            deployment-isolated-network: "true"
            app: go
        spec:
          containers:
            - image: acrminitweettesting02/go-mini-twit-simulator
              name: go-simulator
              ports:
                - containerPort: 9000
              resources:
                limits:
                  memory: "500Mi"
          restartPolicy: Always
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: deployment-isolated-network
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  deployment-isolated-network: "true"
      podSelector:
        matchLabels:
          deployment-isolated-network: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: react
      name: react
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: react
      strategy: {}
      template:
        metadata:
          labels:
            deployment-isolated-network: "true"
            app: react
        spec:
          containers:
            - image: acrminitweettesting02/react-mini-twit-frontend
              name: react-frontend
              ports:
                - containerPort: 3000
              resources:
                limits:
                  memory: "500Mi"
          restartPolicy: Always
apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: spring
      name: spring-service
    spec:
      type: NodePort
      selector:
        app: spring 
      ports:
        - port: 8080
          targetPort: 8080
          nodePort: 31000

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: spring
      deployment-isolated-network: "false"
    name: spring-deployment
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: spring 
    minReadySeconds: 10  
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    template:
      metadata:
        labels:
          app: spring  
      spec:
        terminationGracePeriodSeconds: 1
        containers:
          - image: acrminitweettesting02/spring-boot-backend
            name: spring-backend
            imagePullPolicy: Always
            ports:
              - containerPort: 8080
            resources:
              limits:
                cpu: 2000m # 2000 milicpu
                memory: 1600Mi # 1600 MB
            livenessProbe:
              httpGet:
                path: /actuator/health/liveness
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 1
            readinessProbe:
              httpGet:
                path: /actuator/health/readiness
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 3
              failureThreshold: 1
            env:
             - name: COSMOS_CONNECTION_STRING
               valueFrom:
                 secretKeyRef:
                   key: uri
                   name: cosmos-connection
        restartPolicy: Always
kind: List
metadata: {}

